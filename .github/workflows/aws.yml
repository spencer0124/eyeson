# # aws.yml
# name: main branch auto ci process script

# on: # 아래 job을 실행시킬 상황
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     name: deploy
#     runs-on: ubuntu-latest # 실행될 인스턴스 OS와 버전
#     defaults:
#       run:
#         shell: bash -l {0}

#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and Push Docker Image to Docker Hub
#         run: |
#           docker build -f backend/Dockerfile -t minjipk/eyeson:latest backend
#           docker push minjipk/eyeson:latest

#       - name: Copy docker-compose.yml to EC2
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.REMOTE_IP }}
#           username: ${{ secrets.REMOTE_USER }}
#           key: ${{ secrets.REMOTE_PRIVATE_KEY }}
#           source: "backend/docker-compose.yml"
#           target: "/home/${{ secrets.REMOTE_USER }}/eyeson/backend/"
          
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master # ssh 접속하는 오픈소스
#         with:
#           host: ${{ secrets.REMOTE_IP }} # 인스턴스 IP
#           username: ${{ secrets.REMOTE_USER }} # 우분투 아이디
#           key: ${{ secrets.REMOTE_PRIVATE_KEY }} # ec2 instance pem key
#           envs: OPENAI_API_KEY
#           script: |
#             cd /home/${{ secrets.REMOTE_USER }}/eyeson/backend
#             export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
#             docker-compose pull
#             docker-compose up -d
#             sleep 5
#             docker-compose logs app --tail 10